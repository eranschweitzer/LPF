function mat = genAru(ID,btype,F,T,Sb,Pg,Pd,u0,varargin)

[g,b,~,tau,tshift,gsh,~] = branchparts_unpack(Sb,btype);

% Gwtype = varargin_parse(varargin,'Gw','default');
% Gw = genweights(g,Gwtype);
Gw = varargin_parse(varargin,'Gw',branchweights(Sb));

N = length(u0);
switch ID
    case 0
        mat = ...
            diags(exp(-u0).*(Pg-Pd) + exp(u0).*gsh)...
            +F'*diags(tau.^(-1))*(diags(tau.^(-1))*diags(exp(Gw.g*F*u0).*g)*F ...
               -diags(exp(Gw.g*T*u0).*(g.*cos(tshift) - b.*sin(tshift)))*T)...
            +T'*(diags(exp(Gw.g*T*u0).*g)*T...
            -diags(tau.^(-1))*diags(exp(Gw.g*F*u0).*(g.*cos(tshift) + b.*sin(tshift)))*F);
    case 1
        mat = ...
            diags(exp(-u0).*(Pg-Pd) + exp(u0).*gsh)...
            +F'*(diags(exp(Gw.g*F*u0).*g)*F ...
               -diags(exp(Gw.g*T*u0).*(g.*cos(tshift) - b.*sin(tshift)))*T)...
            +T'*(diags(exp(Gw.g*T*u0).*g)*T...
            -diags(exp(Gw.g*F*u0).*(g.*cos(tshift) + b.*sin(tshift)))*F);
   case 2
        mat = ...
            diags(Pg - Pd + gsh)...
            +F'*(diags(g)*F - diags(g.*cos(tshift) - b.*sin(tshift))*T)...
            +T'*(diags(g)*T - diags(g.*cos(tshift) + b.*sin(tshift))*F);
    case 3
        mat = ...
            diags(exp(-u0).*(Pg-Pd) + exp(u0).*gsh)...
            +F'*diags(exp(T*u0).*b.*sin(tshift))*T ...
            -T'*diags(exp(F*u0).*b.*sin(tshift))*F;
    case 4
        mat = ...
            diags(Pg - Pd + gsh)...
            +F'*diags(b.*sin(tshift))*T ...
            -T'*diags(b.*sin(tshift))*F;
    case 5
        mat = sparse(N,N);
    case 6
        mat = diags(exp(-u0).*(Pg-Pd) + exp(u0).*gsh);
    case 7
        mat = diags(Pg - Pd + gsh);
    otherwise
        error('Incorrect ID')
end