function Q = calcQflow(ID,btype,vars,F,T,E,Sb,varargin)

Q = struct();
[g,b,bc,tau,tshift,~,~] = branchparts_unpack(Sb,btype);
% Gwtype = varargin_parse(varargin,'Gw','default');
% Gw = genweights(b,Gwtype);
Gw = varargin_parse(varargin,'Gw',branchweights(Sb));
switch ID
    case 0 %full
        Q.f = F*vars.v.*( -exp(Gw.b*F*vars.u0).*tau.^(-2).*(b + bc/2).*(1 + F*vars.uhat)...
                   +exp(Gw.b*T*vars.u0).*tau.^(-1).*(g.*sin(tshift) + b.*cos(tshift)).*(1 + T*vars.uhat - vars.phi)...
                   -exp(T*vars.u0).*tau.^(-1).*(g.*cos(tshift) - b.*sin(tshift)).*E*vars.theta);
        Q.t = T*vars.v.*( -exp(Gw.b*T*vars.u0).*(b + bc/2).*(1 + T*vars.uhat)...
                   +exp(Gw.b*F*vars.u0).*tau.^(-1).*(-g.*sin(tshift) + b.*cos(tshift)).*(1 + F*vars.uhat - vars.phi)...
                   +exp(F*vars.u0).*tau.^(-1).*( g.*cos(tshift) + b.*sin(tshift)).*E*vars.theta);
    case 1 %simplified
        Q.f = F*vars.v.*( -exp(Gw.b*F*vars.u0).*tau.^(-2).*(b + bc/2).*(1 + F*vars.uhat)...
                   +exp(Gw.b*T*vars.u0).*tau.^(-1).*b.*(1 + T*vars.uhat - vars.phi)...
                   -exp(T*vars.u0).*tau.^(-1).*g.*E*vars.theta);
        Q.t = T*vars.v.*( -exp(Gw.b*T*vars.u0).*(b + bc/2).*(1 + T*vars.uhat)...
                   +exp(Gw.b*F*vars.u0).*tau.^(-1).*b.*(1 + F*vars.uhat - vars.phi)...
                   +exp(F*vars.u0).*tau.^(-1).*g.*E*vars.theta);
    case 2 %no initial voltage
        Q.f = F*vars.v.*( -tau.^(-2).*(b + bc/2).*(1 + F*vars.uhat)...
                   +tau.^(-1).*b.*(1 + T*vars.uhat - vars.phi)...
                   -tau.^(-1).*g.*E*vars.theta);
        Q.t = T*vars.v.*( -(b + bc/2).*(1 + T*vars.uhat)...
                   +tau.^(-1).*b.*(1 + F*vars.uhat - vars.phi)...
                   +tau.^(-1).*g.*E*vars.theta);
    case 3 %no conductance
        Q.f = F*vars.v.*( -exp(F*vars.u0).*tau.^(-2).*(b + bc/2).*(1 + F*vars.uhat)...
                   +exp(T*vars.u0).*tau.^(-1).*b.*(1 + T*vars.uhat - vars.phi));
        Q.t = T*vars.v.*( -exp(T*vars.u0).*(b + bc/2).*(1 + T*vars.uhat)...
                   +exp(F*vars.u0).*tau.^(-1).*b.*(1 + F*vars.uhat - vars.phi));
    case 4 %no conductance, no initial voltage
        Q.f = F*vars.v.*( -tau.^(-2).*(b + bc/2).*(1 + F*vars.uhat)...
                   +tau.^(-1).*b.*(1 + T*vars.uhat - vars.phi));
        Q.t = T*vars.v.*( -(b + bc/2).*(1 + T*vars.uhat)...
                   +tau.^(-1).*b.*(1 + F*vars.uhat - vars.phi));
    case 5 %full nonlinear
        Q.f = -F*(vars.v.^2).*tau.^(-2).*(b+bc/2) - (F*vars.v).*(T*vars.v).*...
              (cos(E*vars.theta).*(-tau.^(-1).*(g.*sin(tshift) + b.*cos(tshift)))...
              -sin(E*vars.theta).*(-tau.^(-1).*(g.*cos(tshift) - b.*sin(tshift))));
        Q.t = -T*(vars.v.^2).*(b+bc/2) - (T*vars.v).*(F*vars.v).*...
              (cos(E*vars.theta).*(-tau.^(-1).*(-g.*sin(tshift) + b.*cos(tshift)))...
              +sin(E*vars.theta).*(-tau.^(-1).*( g.*cos(tshift) - b.*sin(tshift)))); 
    otherwise
        error('Incorrect ID')
end
        